{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,SAAS,YAAY,GAAG;IACtB,OAAO,WAAW,IAAI,OAAO,CAAC,YAAY;AAC5C;AAEA,SAAS,SAAS,IAAI;IACpB,MAAM,aAAa;WAAI;KAAK,CAAC,IAAI,CAAC,CAAC,KAAK;QACtC,MAAM,UAAU,YAAY,IAAI,OAAO,CAAC,MAAM;QAC9C,MAAM,UAAU,YAAY,IAAI,OAAO,CAAC,MAAM;QAE9C,OAAO,UAAU;IACnB;IAEA,MAAM,MAAM,IAAI,CAAC,EAAE,CAAC,UAAU;IAE9B,IAAI,SAAS,GAAG;IAChB,WAAW,OAAO,CAAC,CAAC,OAAS,IAAI,WAAW,CAAC;AAC/C;AAEA,SAAS,aAAa,IAAI;IACxB,OAAO;WAAI;KAAK,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO;YACL,MAAM,OAAO,WAAW,CAAC,IAAI;YAC7B,UAAU,OAAO,OAAO,CAAC,QAAQ;YACjC,QAAQ,OAAO,OAAO,CAAC,MAAM;YAC7B,KAAK,OAAO,OAAO,CAAC,GAAG;QACzB;IACF;AACF;AAEA,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst liList = document.querySelectorAll('li');\n\nfunction parseSalary(str) {\n  return parseFloat(str.replace(/[^\\d.-]/g, ''));\n}\n\nfunction sortList(list) {\n  const sortedList = [...list].sort((li1, li2) => {\n    const salary1 = parseSalary(li1.dataset.salary);\n    const salary2 = parseSalary(li2.dataset.salary);\n\n    return salary2 - salary1;\n  });\n\n  const dad = list[0].parentNode;\n\n  dad.innerHTML = '';\n  sortedList.forEach((item) => dad.appendChild(item));\n}\n\nfunction getEmployees(list) {\n  return [...list].map((person) => {\n    return {\n      name: person.textContent.trim(),\n      position: person.dataset.position,\n      salary: person.dataset.salary,\n      age: person.dataset.age,\n    };\n  });\n}\n\nsortList(liList);\ngetEmployees(liList);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}